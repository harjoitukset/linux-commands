VGhlIFRhbGUgb2YgQmFycnkgdGhlIEJhY2t1cCBCdWZmb29uCgpPbmNlIHVwb24gYSB0aW1lIGlu
IHRoZSBidXN0bGluZyBsYW5kIG9mIFRlY2h2aWxsZSwgdGhlcmUgd2FzIGEgc3lzdGVtCmFkbWlu
aXN0cmF0b3IgbmFtZWQgQmFycnkuIEJhcnJ5IHdhcyBrbm93biBmb3IgaGlzIGV4dHJhb3JkaW5h
cnkgY29kaW5nCnNraWxscyBhbmQgaGlzIGVxdWFsbHkgZXh0cmFvcmRpbmFyeSBrbmFjayBmb3Ig
Zm9yZ2V0dGluZyB0aGUgbW9zdCBiYXNpYwpydWxlcyBvZiBzeXN0ZW0gYWRtaW5pc3RyYXRpb24u
IE9uZSBzdW5ueSBhZnRlcm5vb24sIEJhcnJ5IGRlY2lkZWQgaXQgd2FzCnRpbWUgdG8gY2xlYW4g
dXAgdGhlIGNsdXR0ZXIgb24gaGlzIHNlcnZlci4KCkZlZWxpbmcgY29uZmlkZW50LCBCYXJyeSB0
eXBlZCBpbiBhIGNvbW1hbmQgaGUgaGFkIHVzZWQgY291bnRsZXNzIHRpbWVzOiBybQotcmYgL2hv
bWUvYmFycnkvb2xkX3Byb2plY3RzLiBXaGF0IEJhcnJ5IGRpZG7igJl0IHJlYWxpemUgd2FzIHRo
YXQgaGUgaGFkCmFjY2lkZW50YWxseSBtaXN0eXBlZCB0aGUgY29tbWFuZCBhbmQsIGluc3RlYWQg
b2YgZGVsZXRpbmcgb2xkIHByb2plY3RzLApoZSBoYWQgdHlwZWQgcm0gLXJmIC8sIHdoaWNoIHN0
YXJ0ZWQgZXJhc2luZyB0aGUgZW50aXJlIGZpbGVzeXN0ZW0uIFBhbmljCnN0cnVjayBhcyBCYXJy
eSB3YXRjaGVkIGZpbGVzIHZhbmlzaCBpbnRvIHRoZSBkaWdpdGFsIGV0aGVyLgoKRGVzcGVyYXRl
IHRvIHNhbHZhZ2UgdGhlIHNpdHVhdGlvbiwgQmFycnkgc2NyYW1ibGVkIHRvIHJlbWVtYmVyIGhp
cyBiYWNrdXAKc3RyYXRlZ3kuIFRvIGhpcyBob3Jyb3IsIGhlIHJlYWxpemVkIGhlIGhhZCBuZXZl
ciBzZXQgdXAgYW55IGJhY2t1cHMhIFRoZSBvbmx5CiJiYWNrdXAiIGhlIGhhZCB3YXMgYSB2YWd1
ZSBwcm9taXNlIGhlIG1hZGUgdG8gaGltc2VsZiBzaXggbW9udGhzIGFnbyB0bwoiZ2V0IGFyb3Vu
ZCB0byBpdC4iIFdpdGggbm90aGluZyBsZWZ0IHRvIGRvIGJ1dCB3YXRjaCB0aGUgc3lzdGVt4oCZ
cyBkYXRhCmRpc2FwcGVhciwgQmFycnkgd2FzIGxlZnQgd2l0aCBhIHByb2ZvdW5kIHJlYWxpemF0
aW9uOiBiYWNrdXBzIHdlcmUgbW9yZQp0aGFuIGp1c3QgYSBnb29kIGlkZWHigJR0aGV5IHdlcmUg
ZXNzZW50aWFsLgoKRGV0ZXJtaW5lZCBub3QgdG8gbGV0IGhpcyBtaXN0YWtlIGJlY29tZSBhIHBl
cm1hbmVudCBwcm9ibGVtLCBCYXJyeSBzZXQgb3V0IHRvCmJlY29tZSBhIGJhY2t1cCBndXJ1LiBI
ZSBjcmVhdGVkIGVsYWJvcmF0ZSBiYWNrdXAgc2NyaXB0cywgc2V0IHVwIGF1dG9tYXRpYwpzbmFw
c2hvdHMsIGFuZCBldmVuIGJlZ2FuIHRvIHVzZSByc3luYyBsaWtlIGEgcHJvLiBIaXMgbmV3IG1v
dHRvIGJlY2FtZSwKIkJhY2t1cHM6IEJlY2F1c2UgZXZlbiB0aGUgYmVzdCBhZG1pbnMgbWFrZSBt
aXN0YWtlcy4iCgpPbmUgZGF5LCB3aGlsZSBzaG93aW5nIG9mZiBoaXMgc2hpbnkgbmV3IGJhY2t1
cCBzeXN0ZW0gdG8gYSBjb2xsZWFndWUsIEJhcnJ5CmNvbmZpZGVudGx5IHNhaWQsIOKAnEFuZCBp
ZiBkaXNhc3RlciBzdHJpa2VzLCBJ4oCZbGwgYmUgcmVhZHkhIEkgZXZlbiB0ZXN0Cm15IHJlY292
ZXJ5IHByb2Nlc3Mgd2Vla2x5IeKAnQoKSGlzIGNvbGxlYWd1ZSByYWlzZWQgYW4gZXllYnJvdyBh
bmQgYXNrZWQsIOKAnFdlZWtseT8gV2hhdCBpZiB5b3UgdGVzdCBpdAphbmQgZmluZCBpdOKAmXMg
bm90IHdvcmtpbmc/4oCdCgpCYXJyeSBjaHVja2xlZCBuZXJ2b3VzbHkgYW5kIHJlcGxpZWQsIOKA
nFdlbGwsIHRoYXTigJlzIHdoeSBJIGtlZXAgYSBiYWNrdXAKb2YgbXkgYmFja3VwIHBsYW4h4oCd
CgpBbmQgc28sIEJhcnJ5IGxpdmVkIGhhcHBpbHkgZXZlciBhZnRlciwgd2l0aCBub3Qgb25seSBo
aXMgZGF0YSBzZWN1cmVseQpiYWNrZWQgdXAgYnV0IGFsc28gYSBsZXNzb24gd2VsbCBsZWFybmVk
OiBuZXZlciB1bmRlcmVzdGltYXRlIHRoZSBwb3dlciBvZgphIGdvb2QgYmFja3VwLgoKLS0tLS0t
CgpUaGlzIHN0b3J5IHdhcyB3cml0dGVuIGJ5IENoYXRHUFQuCg==
